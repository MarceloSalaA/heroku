{"version":3,"file":"main.js","mappings":"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","sources":["webpack://apoloplay/./apps/authentication-service/src/app/models/user.ts","webpack://apoloplay/./apps/authentication-service/src/app/modules/index.ts","webpack://apoloplay/./apps/authentication-service/src/app/modules/user/service.ts","webpack://apoloplay/./apps/authentication-service/src/app/routes/index.ts","webpack://apoloplay/external commonjs \"express\"","webpack://apoloplay/external commonjs \"mongoose\"","webpack://apoloplay/external commonjs \"tslib\"","webpack://apoloplay/webpack/bootstrap","webpack://apoloplay/./apps/authentication-service/src/main.ts"],"sourcesContent":["import { User } from '@apoloplay/definitions';\nimport { Types, model, Schema } from 'mongoose';\n\n// export const UserMongo = model(\n//   'User',\n//   new Schema(\n//     class UserSchema implements User {\n//       _id: Types.ObjectId;\n//       name: string;\n//       last_name: string;\n//       email: string;\n//       password: string;\n//     }\n//   )\n// );\n\nconst UserSchema = new Schema({\n  name: { require: true, type: String },\n  last_name: { require: true, type: String },\n  email: { require: true, type: String },\n  password: { require: true, type: String },\n});\n\nexport const UserMongo = model('User', UserSchema);\n","export * from './user/service';\n","import { Handler, Request, Response } from 'express';\nimport { Types } from 'mongoose';\nimport { UserMongo } from '../../models/user';\n\nconst validateObject = ({ name, last_name, email, password }) => {\n  name && last_name && email && password;\n};\n\nexport const getUsers: Handler = async (req: Request, res: Response) => {\n  const users = await UserMongo.find();\n  return res.status(200).send(users);\n};\n\nexport const getUserById: Handler = async (req: Request, res: Response) => {\n  const user = await UserMongo.findById(new Types.ObjectId(req.body._id));\n  if (!user) {\n    return res.status(404).send({ error: 'Id does not exists' });\n  }\n  return res.status(200).send(user);\n};\n\nexport const createUser: Handler = async (req: Request, res: Response) => {\n  const user = new UserMongo(req.body);\n\n  await user.save();\n  // return res.status(400).send({ error: 'Missing attributes' });\n  return res.status(201).send(user);\n};\n\nexport const updateUserById: Handler = async (req: Request, res: Response) => {\n  if (!(await UserMongo.findById(new Types.ObjectId(req.body._id)))) {\n    return res.status(404).send({ error: 'Id does not exists' });\n  }\n  await UserMongo.findByIdAndUpdate(req.body._id, req.body);\n  const user = await UserMongo.findById(req.body._id);\n  return res.status(200).send(user);\n};\n\nexport const deleteUserById: Handler = async (req: Request, res: Response) => {\n  if (!(await UserMongo.findById(new Types.ObjectId(req.body._id)))) {\n    return res.status(404).send({ error: 'Id does not exists' });\n  }\n  const user = await UserMongo.findByIdAndDelete(req.body._id);\n  return res.status(200).send(user);\n};\n","import { Router } from 'express';\nimport {\n  deleteUserById,\n  getUserById,\n  getUsers,\n  createUser,\n  updateUserById,\n} from '../modules';\n\nconst router = Router();\n\nrouter.get('/users', getUsers);\nrouter.get('/user', getUserById);\nrouter.post('/user', createUser);\nrouter.patch('/user', updateUserById);\nrouter.delete('/user', deleteUserById);\n\nexport default router;\n","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as express from 'express';\nimport mongoose from 'mongoose';\nimport router from './app/routes';\nconsole.log(\n  `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASS}@$${process.env.DB_CLUSTER}.mongodb.net/${process.env.DB_NAME}?retryWrites=true&w=majority`\n);\n\nmongoose.connect(\n  `mongodb+srv://apolo:4p0l0_pl4y@$cluster0.esmluzr.mongodb.net/authentications-local?retryWrites=true&w=majority`\n);\n\nconst app = express();\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(router);\n\nconst port = process.env.port || 3000;\n\nconst server = app.listen(port, () => {\n  console.log(`Listening at http://localhost:${port}/users`);\n});\nserver.on('error', console.error);\n"],"names":[],"sourceRoot":""}