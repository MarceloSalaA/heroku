{"version":3,"file":"main.js","mappings":"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","sources":["webpack://apoloplay/./apps/music-service/src/app/models/artist.ts","webpack://apoloplay/./apps/music-service/src/app/models/song.ts","webpack://apoloplay/./apps/music-service/src/app/modules/artists/service.ts","webpack://apoloplay/./apps/music-service/src/app/modules/index.ts","webpack://apoloplay/./apps/music-service/src/app/modules/songs/service.ts","webpack://apoloplay/./apps/music-service/src/app/routes/index.ts","webpack://apoloplay/external commonjs \"cors\"","webpack://apoloplay/external commonjs \"express\"","webpack://apoloplay/external commonjs \"mongoose\"","webpack://apoloplay/external commonjs \"tslib\"","webpack://apoloplay/webpack/bootstrap","webpack://apoloplay/./apps/music-service/src/main.ts"],"sourcesContent":["import { model, Schema, Types } from 'mongoose';\nimport { SongSchema } from './song';\n\nconst ArtistSchema = new Schema({\n  name: { type: String },\n  image: { type: String },\n  alias: { type: String },\n  nationality: { type: String },\n  songs: [{ type: SongSchema }],\n});\n\nexport const ArtistMongo = model('Artist', ArtistSchema);\n","import { model, Schema } from 'mongoose';\n\nexport const SongSchema = new Schema({\n  image: { type: String },\n  name: { type: String },\n  publish_year: { type: String },\n  url: { type: String },\n});\n\nexport const SongMongo = model('Song', SongSchema);\n","import { Handler, Request, Response } from 'express';\nimport { Types } from 'mongoose';\nimport { ArtistMongo } from '../../models/artist';\nimport { SongMongo } from '../../models/song';\n\nexport const getArtists: Handler = async (req: Request, res: Response) => {\n  const Artists = await ArtistMongo.find();\n  return res.status(200).send(Artists);\n};\n\nexport const getArtistById: Handler = async (req: Request, res: Response) => {\n  const Artist = await ArtistMongo.findById(new Types.ObjectId(req.body._id));\n  if (!Artist) {\n    return res.status(404).send({ error: 'Id does not exists' });\n  }\n  return res.status(200).send(Artist);\n};\n\nexport const createArtist: Handler = async (req: Request, res: Response) => {\n  const tempArtist = new ArtistMongo(req.body);\n\n  for (let i = 0; i < req.body.songs.length; i++) {\n    const song = await SongMongo.findById(\n      new Types.ObjectId(req.body.songs[i])\n    );\n    if (!song) {\n      return res\n        .status(404)\n        .send({ error: `Song ${req.body.songs[i]} does not exists` });\n    } else {\n      tempArtist.songs[i] = await SongMongo.findById(\n        new Types.ObjectId(req.body.songs[i])\n      );\n    }\n  }\n\n  const Artist = new ArtistMongo(tempArtist);\n\n  try {\n    await Artist.save();\n  } catch (error) {\n    console.log(error);\n  }\n  return res.status(201).send(Artist);\n};\n\nexport const updateArtistById: Handler = async (\n  req: Request,\n  res: Response\n) => {\n  if (!(await ArtistMongo.findById(new Types.ObjectId(req.body._id)))) {\n    return res.status(404).send({ error: 'Id does not exists' });\n  }\n  await ArtistMongo.findByIdAndUpdate(req.body._id, req.body);\n  const Artist = await ArtistMongo.findById(req.body._id);\n  return res.status(200).send(Artist);\n};\n\nexport const deleteArtistById: Handler = async (\n  req: Request,\n  res: Response\n) => {\n  if (!(await ArtistMongo.findById(new Types.ObjectId(req.body._id)))) {\n    return res.status(404).send({ error: 'Id does not exists' });\n  }\n  const Artist = await ArtistMongo.findByIdAndDelete(req.body._id);\n  return res.status(200).send(Artist);\n};\n","export * from './songs/service';\nexport * from './artists/service';\n","import { Handler, Request, Response } from 'express';\nimport { Types } from 'mongoose';\nimport { SongMongo } from '../../models/song';\n\nexport const getsongs: Handler = async (req: Request, res: Response) => {\n  const songs = await SongMongo.find();\n  return res.status(200).send(songs);\n};\n\nexport const getsongById: Handler = async (req: Request, res: Response) => {\n  const song = await SongMongo.findById(new Types.ObjectId(req.body._id));\n  if (!song) {\n    return res.status(404).send({ error: 'Id does not exists' });\n  }\n\n  return res.status(200).send(song);\n};\n\nexport const createsong: Handler = async (req: Request, res: Response) => {\n  const song = new SongMongo(req.body);\n  await song.save();\n\n  return res.status(201).send(song);\n};\n\nexport const updatesongById: Handler = async (req: Request, res: Response) => {\n  if (!(await SongMongo.findById(new Types.ObjectId(req.body._id)))) {\n    return res.status(404).send({ error: 'Id does not exists' });\n  }\n  await SongMongo.findByIdAndUpdate(req.body._id, req.body);\n  const song = await SongMongo.findById(req.body._id);\n  return res.status(200).send(song);\n};\n\nexport const deletesongById: Handler = async (req: Request, res: Response) => {\n  if (!(await SongMongo.findById(new Types.ObjectId(req.body._id)))) {\n    return res.status(404).send({ error: 'Id does not exists' });\n  }\n  const song = await SongMongo.findByIdAndDelete(req.body._id);\n  return res.status(200).send(song);\n};\n","import { Router } from 'express';\nimport {\n  getsongs,\n  getsongById,\n  createsong,\n  updatesongById,\n  deletesongById,\n  deleteArtistById,\n  getArtistById,\n  getArtists,\n  updateArtistById,\n  createArtist,\n} from '../modules/index';\n\nconst router = Router();\n\nrouter.get('/songs', getsongs);\nrouter.get('/song', getsongById);\nrouter.post('/song', createsong);\nrouter.patch('/song', updatesongById);\nrouter.delete('/song', deletesongById);\n\nrouter.get('/artists', getArtists);\nrouter.get('/artist', getArtistById);\nrouter.post('/artist', createArtist);\nrouter.patch('/artist', updateArtistById);\nrouter.delete('/artist', deleteArtistById);\n\nexport default router;\n","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as express from 'express';\nimport mongoose from 'mongoose';\nimport router from './app/routes';\nimport * as cors from 'cors';\n\n// `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASS}@$cluster1.esmluzr.mongodb.net/${process.env.DB_NAME}?retryWrites=true&w=majority`\nconsole.log(\n  `mongodb+srv://apolo:4p0l0_pl4y@$cluster0.esmluzr.mongodb.net/music-local?retryWrites=true&w=majority`\n);\n\nmongoose.connect(\n  `mongodb+srv://apolo:4p0l0_pl4y@$cluster0.esmluzr.mongodb.net/music-local?retryWrites=true&w=majority`\n);\n\nconst app = express();\n\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(router);\n\nconst PORT = process.env.PORT || 3001;\n\nconst server = app.listen(PORT, () => {\n  console.log(`Listening at http://localhost:${PORT}/songs`);\n});\nserver.on('error', console.error);\n"],"names":[],"sourceRoot":""}